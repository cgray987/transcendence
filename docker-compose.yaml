services:
  adminer:
    image: adminer
    restart: always
    depends_on: 
      - db
    ports:
      - 8080:8080
    networks:
      - transcendence
  db:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - transcendence
  nginx:
    image: nginx
    container_name: nginx
    build:
      context: ./srcs/nginx
      dockerfile: Dockerfile
    ports:
      - "8443:8443"
    volumes:
      - ./srcs/frontend:/usr/share/nginx/html
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - web
    networks:
      - transcendence
  web:
    container_name: web
    build:
      context: ./srcs/django/transcendence
      dockerfile: Dockerfile
    volumes:
      - ./srcs/django:/app
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      - db
    networks:
      - transcendence
    env_file:
    - .env

volumes:
  db_data:
  media_volume:

networks:
  transcendence:
    driver: bridge